{"ast":null,"code":"import { nameInput, jobInput, avatarLinkInput, inputNamePlace, inputLinkPlace } from \"./constants.js\";\n\nclass Api {\n  constructor(config) {\n    this.url = config.url;\n    this.headers = config.headers;\n  }\n\n  getPlaces() {\n    return fetch(`${this.url}/cards`, {\n      headers: this.headers\n    }).then(this._checkPromise);\n  }\n\n  newPlace() {\n    return fetch(`${this.url}/cards`, {\n      method: \"POST\",\n      headers: this.headers,\n      body: JSON.stringify({\n        name: inputNamePlace.value,\n        link: inputLinkPlace.value\n      })\n    }).then(this._checkPromise);\n  }\n\n  getUserInfo() {\n    return fetch(`${this.url}/users/me`, {\n      headers: this.headers\n    }).then(this._checkPromise);\n  }\n\n  patchUserInfo() {\n    return fetch(`${this.url}/users/me`, {\n      method: \"PATCH\",\n      headers: this.headers,\n      body: JSON.stringify({\n        name: nameInput.value,\n        about: jobInput.value\n      })\n    }).then(this._checkPromise);\n  }\n\n  patchUserAvatar() {\n    return fetch(`${this.url}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this.headers,\n      body: JSON.stringify({\n        avatar: avatarLinkInput.value\n      })\n    }).then(this._checkPromise);\n  }\n\n  addLike(cardId) {\n    return fetch(`${this.url}/cards/likes/${cardId}`, {\n      method: \"PUT\",\n      headers: this.headers\n    }).then(this._checkPromise);\n  }\n\n  removeLike(cardId) {\n    return fetch(`${this.url}/cards/likes/${cardId}`, {\n      method: \"DELETE\",\n      headers: this.headers\n    }).then(this._checkPromise);\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this.url}/cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: this.headers\n    }).then(this._checkPromise);\n  }\n\n  _checkPromise(res) {\n    if (!res.ok) {\n      Promise.reject(`Error ${res.status}`);\n    }\n\n    return res.json();\n  }\n\n}\n\nconst api = new Api({\n  url: \"https://mesto.nomoreparties.co/v1/cohort-18\",\n  headers: {\n    \"Content-Type\": \"application/json\",\n    authorization: \"87b27e82-ce10-439c-bbe6-2acce8f72cdc\"\n  }\n});\nexport default api;","map":{"version":3,"sources":["/Users/mymacbook/dev/mesto-react/src/utils/api.js"],"names":["nameInput","jobInput","avatarLinkInput","inputNamePlace","inputLinkPlace","Api","constructor","config","url","headers","getPlaces","fetch","then","_checkPromise","newPlace","method","body","JSON","stringify","name","value","link","getUserInfo","patchUserInfo","about","patchUserAvatar","avatar","addLike","cardId","removeLike","deleteCard","res","ok","Promise","reject","status","json","api","authorization"],"mappings":"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","sourcesContent":["import {\n  nameInput,\n  jobInput,\n  avatarLinkInput,\n  inputNamePlace,\n  inputLinkPlace,\n} from \"./constants.js\";\n\nclass Api {\n  constructor(config) {\n    this.url = config.url;\n    this.headers = config.headers;\n  }\n\n  getPlaces() {\n    return fetch(`${this.url}/cards`, {\n      headers: this.headers,\n    }).then(this._checkPromise);\n  }\n\n  newPlace() {\n    return fetch(`${this.url}/cards`, {\n      method: \"POST\",\n      headers: this.headers,\n      body: JSON.stringify({\n        name: inputNamePlace.value,\n        link: inputLinkPlace.value,\n      }),\n    }).then(this._checkPromise);\n  }\n\n  getUserInfo() {\n    return fetch(`${this.url}/users/me`, {\n      headers: this.headers,\n    }).then(this._checkPromise);\n  }\n\n  patchUserInfo() {\n    return fetch(`${this.url}/users/me`, {\n      method: \"PATCH\",\n      headers: this.headers,\n      body: JSON.stringify({\n        name: nameInput.value,\n        about: jobInput.value,\n      }),\n    }).then(this._checkPromise);\n  }\n\n  patchUserAvatar() {\n    return fetch(`${this.url}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this.headers,\n      body: JSON.stringify({\n        avatar: avatarLinkInput.value,\n      }),\n    }).then(this._checkPromise);\n  }\n\n  addLike(cardId) {\n    return fetch(`${this.url}/cards/likes/${cardId}`, {\n      method: \"PUT\",\n      headers: this.headers,\n    }).then(this._checkPromise);\n  }\n\n  removeLike(cardId) {\n    return fetch(`${this.url}/cards/likes/${cardId}`, {\n      method: \"DELETE\",\n      headers: this.headers,\n    }).then(this._checkPromise);\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this.url}/cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: this.headers,\n    }).then(this._checkPromise);\n  }\n\n  _checkPromise(res) {\n    if (!res.ok) {\n      Promise.reject(`Error ${res.status}`);\n    }\n    return res.json();\n  }\n}\n\nconst api = new Api({\n  url: \"https://mesto.nomoreparties.co/v1/cohort-18\",\n  headers: {\n    \"Content-Type\": \"application/json\",\n    authorization: \"87b27e82-ce10-439c-bbe6-2acce8f72cdc\",\n  },\n});\n\nexport default api;\n"]},"metadata":{},"sourceType":"module"}